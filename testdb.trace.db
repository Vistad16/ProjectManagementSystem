2022-05-26 10:53:52 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "TEST_TABLE" already exists; SQL statement:
CREATE TABLE test_table (name VARCHAR(100)) [42101-210]
2022-05-30 11:32:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS developer (\000a    id IDENTITY PRIMARY KEY,\000a    company_id BIGINT NOT NULL\000a    [*]name VARCHAR(100) NOT NULL,\000a    age INT NOT NULL,\000a    sex VARCHAR(50) NOT NULL,\000a    salary INT NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS skills (\000a    id IDENTITY PRIMARY KEY,\000a    programming_language VARCHAR(50) NOT NULL,\000a    skill_level VARCHAR(50) NOT NULL\000a);\000a\000aCREATE TABLE IF NOT EXISTS developers_skills (\000a    developers_id BIGINT NOT NULL,\000a    skill_id BIGINT NOT NULL,\000a    PRIMARY KEY (developers_id, skill_id),\000a    FOREIGN KEY (developers_id) REFERENCES developer(id),\000a    FOREIGN KEY (skill_id) REFERENCES skills(id)\000a);\000a\000aALTER TABLE IF NOT EXISTS developer --фіксим таблицю ""developer""\000aADD CONSTRAINT sex_enum_values --додаємо обмеження з ""sex_enum_values"" іменем\000aCHECK (sex IN ('male', 'female', 'unknown')); --перевіряємо значеня поля ""sex"" щоб воно було в одному з трьох ппараметрів ""'male', 'female', 'unknown'""\000a\000aCREATE TABLE IF NOT EXISTS projects (\000a    id IDENTITY PRIMARY KEY,\000a    projects_name VARCHAR(100) NOT NULL,\000a    cost BIGINT NOT NULL,\000a    description VARCHAR(350)\000a);\000a\000aCREATE TABLE IF NOT EXISTS developer_project (\000a    developer_id BIGINT NOT NULL,\000a    project_id BIGINT NOT NULL,\000a    PRIMARY KEY (developer_id, project_id),\000a    FOREIGN KEY (developer_id) REFERENCES developer(id),\000a    FOREIGN KEY (project_id) REFERENCES projects(id)\000a);\000a\000aCREATE TABLE IF NOT EXISTS customers (\000a    id IDENTITY PRIMARY KEY,\000a    name VARCHAR(100) NOT NULL,\000a    Country VARCHAR(50)\000a);\000a\000aCREATE TABLE IF NOT EXISTS customers_projects (\000a    customer_id BIGINT NOT NULL,\000a    projects_id BIGINT NOT NULL,\000a    PRIMARY KEY (customer_id, projects_id),\000a    FOREIGN KEY (customer_id) REFERENCES customers(id),\000a    FOREIGN KEY (projects_id) REFERENCES projects(id)\000a);\000a\000aCREATE TABLE IF NOT EXISTS companies (\000a    id IDENTITY PRIMARY KEY,\000a    company_name VARCHAR(100) NOT NULL,\000a    specialization VARCHAR(150)\000a);\000a\000aALTER TABLE IF NOT EXISTS developer\000aADD CONSTRAINT developer_companies_id_fk\000aFOREIGN KEY (company_id) REFERENCES companies(id);\000a\000aALTER TABLE IF NOT EXISTS projects\000aADD CONSTRAINT projects_companies_id_fk\000aFOREIGN KEY (company_id) REFERENCES companies(id);\000a\000aCREATE TABLE IF NOT EXISTS company_customer (\000a    customer_id BIGINT NOT NULL,\000a    company_id BIGINT NOT NULL,\000a    PRIMARY KEY (customer_id, company_id),\000a    FOREIGN KEY (customer_id) REFERENCES customers(id),\000a    FOREIGN KEY (company_id) REFERENCES companies(id)\000a);"; expected "AS, DEFAULT, GENERATED, ON, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE IF NOT EXISTS developer (
    id IDENTITY PRIMARY KEY,
    company_id BIGINT NOT NULL
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    sex VARCHAR(50) NOT NULL,
    salary INT NOT NULL
);

CREATE TABLE IF NOT EXISTS skills (
    id IDENTITY PRIMARY KEY,
    programming_language VARCHAR(50) NOT NULL,
    skill_level VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS developers_skills (
    developers_id BIGINT NOT NULL,
    skill_id BIGINT NOT NULL,
    PRIMARY KEY (developers_id, skill_id),
    FOREIGN KEY (developers_id) REFERENCES developer(id),
    FOREIGN KEY (skill_id) REFERENCES skills(id)
);

ALTER TABLE IF NOT EXISTS developer --фіксим таблицю "developer"
ADD CONSTRAINT sex_enum_values --додаємо обмеження з "sex_enum_values" іменем
CHECK (sex IN ('male', 'female', 'unknown')); --перевіряємо значеня поля "sex" щоб воно було в одному з трьох ппараметрів "'male', 'female', 'unknown'"

CREATE TABLE IF NOT EXISTS projects (
    id IDENTITY PRIMARY KEY,
    projects_name VARCHAR(100) NOT NULL,
    cost BIGINT NOT NULL,
    description VARCHAR(350)
);

CREATE TABLE IF NOT EXISTS developer_project (
    developer_id BIGINT NOT NULL,
    project_id BIGINT NOT NULL,
    PRIMARY KEY (developer_id, project_id),
    FOREIGN KEY (developer_id) REFERENCES developer(id),
    FOREIGN KEY (project_id) REFERENCES projects(id)
);

CREATE TABLE IF NOT EXISTS customers (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    Country VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS customers_projects (
    customer_id BIGINT NOT NULL,
    projects_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, projects_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (projects_id) REFERENCES projects(id)
);

CREATE TABLE IF NOT EXISTS companies (
    id IDENTITY PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    specialization VARCHAR(150)
);

ALTER TABLE IF NOT EXISTS developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id);

ALTER TABLE IF NOT EXISTS projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id);

CREATE TABLE IF NOT EXISTS company_customer (
    customer_id BIGINT NOT NULL,
    company_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, company_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (company_id) REFERENCES companies(id)
); [42001-212]
2022-05-30 11:35:33 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:124)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3349)
	at org.h2.mvstore.MVStore.panic(MVStore.java:590)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:466)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4118)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:253)
	at com.goit.javacore5dev.feature.storage.Storage.<init>(Storage.java:17)
	at com.goit.javacore5dev.feature.storage.Storage.<clinit>(Storage.java:11)
	at AppTest.main(AppTest.java:6)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 20 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:449)
	... 14 more
2022-05-30 11:35:41 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE developer (\000a    id IDENTITY PRIMARY KEY,\000a    company_id BIGINT NOT NULL\000a    [*]name VARCHAR(100) NOT NULL,\000a    age INT NOT NULL,\000a    sex VARCHAR(50) NOT NULL,\000a    salary INT NOT NULL\000a);\000a\000aCREATE TABLE skills (\000a    id IDENTITY PRIMARY KEY,\000a    programming_language VARCHAR(50) NOT NULL,\000a    skill_level VARCHAR(50) NOT NULL\000a);\000a\000aCREATE TABLE developers_skills (\000a    developers_id BIGINT NOT NULL,\000a    skill_id BIGINT NOT NULL,\000a    PRIMARY KEY (developers_id, skill_id),\000a    FOREIGN KEY (developers_id) REFERENCES developer(id),\000a    FOREIGN KEY (skill_id) REFERENCES skills(id)\000a);\000a\000aALTER TABLE developer --фіксим таблицю ""developer""\000aADD CONSTRAINT sex_enum_values --додаємо обмеження з ""sex_enum_values"" іменем\000aCHECK (sex IN ('male', 'female', 'unknown')); --перевіряємо значеня поля ""sex"" щоб воно було в одному з трьох ппараметрів ""'male', 'female', 'unknown'""\000a\000aCREATE TABLE projects (\000a    id IDENTITY PRIMARY KEY,\000a    projects_name VARCHAR(100) NOT NULL,\000a    cost BIGINT NOT NULL,\000a    description VARCHAR(350)\000a);\000a\000aCREATE TABLE developer_project (\000a    developer_id BIGINT NOT NULL,\000a    project_id BIGINT NOT NULL,\000a    PRIMARY KEY (developer_id, project_id),\000a    FOREIGN KEY (developer_id) REFERENCES developer(id),\000a    FOREIGN KEY (project_id) REFERENCES projects(id)\000a);\000a\000aCREATE TABLE customers (\000a    id IDENTITY PRIMARY KEY,\000a    name VARCHAR(100) NOT NULL,\000a    Country VARCHAR(50)\000a);\000a\000aCREATE TABLE customers_projects (\000a    customer_id BIGINT NOT NULL,\000a    projects_id BIGINT NOT NULL,\000a    PRIMARY KEY (customer_id, projects_id),\000a    FOREIGN KEY (customer_id) REFERENCES customers(id),\000a    FOREIGN KEY (projects_id) REFERENCES projects(id)\000a);\000a\000aCREATE TABLE companies (\000a    id IDENTITY PRIMARY KEY,\000a    company_name VARCHAR(100) NOT NULL,\000a    specialization VARCHAR(150)\000a);\000a\000aALTER TABLE developer\000aADD CONSTRAINT developer_companies_id_fk\000aFOREIGN KEY (company_id) REFERENCES companies(id);\000a\000aALTER TABLE projects\000aADD CONSTRAINT projects_companies_id_fk\000aFOREIGN KEY (company_id) REFERENCES companies(id);\000a\000aCREATE TABLE company_customer (\000a    customer_id BIGINT NOT NULL,\000a    company_id BIGINT NOT NULL,\000a    PRIMARY KEY (customer_id, company_id),\000a    FOREIGN KEY (customer_id) REFERENCES customers(id),\000a    FOREIGN KEY (company_id) REFERENCES companies(id)\000a);"; expected "AS, DEFAULT, GENERATED, ON, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE developer (
    id IDENTITY PRIMARY KEY,
    company_id BIGINT NOT NULL
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    sex VARCHAR(50) NOT NULL,
    salary INT NOT NULL
);

CREATE TABLE skills (
    id IDENTITY PRIMARY KEY,
    programming_language VARCHAR(50) NOT NULL,
    skill_level VARCHAR(50) NOT NULL
);

CREATE TABLE developers_skills (
    developers_id BIGINT NOT NULL,
    skill_id BIGINT NOT NULL,
    PRIMARY KEY (developers_id, skill_id),
    FOREIGN KEY (developers_id) REFERENCES developer(id),
    FOREIGN KEY (skill_id) REFERENCES skills(id)
);

ALTER TABLE developer --фіксим таблицю "developer"
ADD CONSTRAINT sex_enum_values --додаємо обмеження з "sex_enum_values" іменем
CHECK (sex IN ('male', 'female', 'unknown')); --перевіряємо значеня поля "sex" щоб воно було в одному з трьох ппараметрів "'male', 'female', 'unknown'"

CREATE TABLE projects (
    id IDENTITY PRIMARY KEY,
    projects_name VARCHAR(100) NOT NULL,
    cost BIGINT NOT NULL,
    description VARCHAR(350)
);

CREATE TABLE developer_project (
    developer_id BIGINT NOT NULL,
    project_id BIGINT NOT NULL,
    PRIMARY KEY (developer_id, project_id),
    FOREIGN KEY (developer_id) REFERENCES developer(id),
    FOREIGN KEY (project_id) REFERENCES projects(id)
);

CREATE TABLE customers (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    Country VARCHAR(50)
);

CREATE TABLE customers_projects (
    customer_id BIGINT NOT NULL,
    projects_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, projects_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (projects_id) REFERENCES projects(id)
);

CREATE TABLE companies (
    id IDENTITY PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    specialization VARCHAR(150)
);

ALTER TABLE developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id);

ALTER TABLE projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id);

CREATE TABLE company_customer (
    customer_id BIGINT NOT NULL,
    company_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, company_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (company_id) REFERENCES companies(id)
); [42001-212]
2022-05-30 11:37:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE developer (\000d\000a    id IDENTITY PRIMARY KEY,\000d\000a    company_id BIGINT NOT NULL\000d\000a    [*]name VARCHAR(100) NOT NULL,\000d\000a    age INT NOT NULL,\000d\000a    sex VARCHAR(50) NOT NULL,\000d\000a    salary INT NOT NULL\000d\000a)"; expected "AS, DEFAULT, GENERATED, ON, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE developer (
    id IDENTITY PRIMARY KEY,
    company_id BIGINT NOT NULL
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    sex VARCHAR(50) NOT NULL,
    salary INT NOT NULL
) [42001-210]
2022-05-30 11:37:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
CREATE TABLE developers_skills (
    developers_id BIGINT NOT NULL,
    skill_id BIGINT NOT NULL,
    PRIMARY KEY (developers_id, skill_id),
    FOREIGN KEY (developers_id) REFERENCES developer(id),
    FOREIGN KEY (skill_id) REFERENCES skills(id)
) [42102-210]
2022-05-30 11:37:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
ALTER TABLE developer --фіксим таблицю "developer"
ADD CONSTRAINT sex_enum_values --додаємо обмеження з "sex_enum_values" іменем
CHECK (sex IN ('male', 'female', 'unknown')) [42102-210]
2022-05-30 11:37:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
CREATE TABLE developer_project (
    developer_id BIGINT NOT NULL,
    project_id BIGINT NOT NULL,
    PRIMARY KEY (developer_id, project_id),
    FOREIGN KEY (developer_id) REFERENCES developer(id),
    FOREIGN KEY (project_id) REFERENCES projects(id)
) [42102-210]
2022-05-30 11:37:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
ALTER TABLE developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42102-210]
2022-05-30 11:37:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "COMPANY_ID" not found; SQL statement:
ALTER TABLE projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.table.Table.getColumn(Table.java:754)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:214)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 11:40:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE developer (\000d\000a    id IDENTITY PRIMARY KEY,\000d\000a    company_id BIGINT NOT NULL\000d\000a    [*]name VARCHAR(100) NOT NULL,\000d\000a    age INT NOT NULL,\000d\000a    sex VARCHAR(50) NOT NULL,\000d\000a    salary BIGINT NOT NULL\000d\000a)"; expected "AS, DEFAULT, GENERATED, ON, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE developer (
    id IDENTITY PRIMARY KEY,
    company_id BIGINT NOT NULL
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    sex VARCHAR(50) NOT NULL,
    salary BIGINT NOT NULL
) [42001-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE developer (\000d\000a    id IDENTITY PRIMARY KEY,\000d\000a    company_id BIGINT NOT NULL\000d\000a    [*]name VARCHAR(100) NOT NULL,\000d\000a    age INT NOT NULL,\000d\000a    sex VARCHAR(50) NOT NULL,\000d\000a    --salary BIGINT NOT NULL\000d\000a)"; expected "AS, DEFAULT, GENERATED, ON, AUTO_INCREMENT, DEFAULT, NULL_TO_DEFAULT, SEQUENCE, SELECTIVITY, COMMENT, CONSTRAINT, COMMENT, PRIMARY, UNIQUE, NOT, NULL, CHECK, REFERENCES, AUTO_INCREMENT, ,, )"; SQL statement:
CREATE TABLE developer (
    id IDENTITY PRIMARY KEY,
    company_id BIGINT NOT NULL
    name VARCHAR(100) NOT NULL,
    age INT NOT NULL,
    sex VARCHAR(50) NOT NULL,
    --salary BIGINT NOT NULL
) [42001-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SKILLS" already exists; SQL statement:
CREATE TABLE skills (
    id IDENTITY PRIMARY KEY,
    programming_language VARCHAR(50) NOT NULL,
    skill_level VARCHAR(50) NOT NULL
) [42101-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
CREATE TABLE developers_skills (
    developers_id BIGINT NOT NULL,
    skill_id BIGINT NOT NULL,
    PRIMARY KEY (developers_id, skill_id),
    FOREIGN KEY (developers_id) REFERENCES developer(id),
    FOREIGN KEY (skill_id) REFERENCES skills(id)
) [42102-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
ALTER TABLE developer --фіксим таблицю "developer"
ADD CONSTRAINT sex_enum_values --додаємо обмеження з "sex_enum_values" іменем
CHECK (sex IN ('male', 'female', 'unknown')) [42102-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PROJECTS" already exists; SQL statement:
--перевіряємо значеня поля "sex" щоб воно було в одному з трьох ппараметрів "'male', 'female', 'unknown'"

CREATE TABLE projects (
    id IDENTITY PRIMA [42101-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
CREATE TABLE developer_project (
    developer_id BIGINT NOT NULL,
    project_id BIGINT NOT NULL,
    PRIMARY KEY (developer_id, project_id),
    FOREIGN KEY (developer_id) REFERENCES developer(id),
    FOREIGN KEY (project_id) REFERENCES projects(id)
) [42102-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMERS" already exists; SQL statement:
CREATE TABLE customers (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    Country VARCHAR(50)
) [42101-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMERS_PROJECTS" already exists; SQL statement:
CREATE TABLE customers_projects (
    customer_id BIGINT NOT NULL,
    projects_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, projects_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (projects_id) REFERENCES projects(id)
) [42101-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANIES" already exists; SQL statement:
CREATE TABLE companies (
    id IDENTITY PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    specialization VARCHAR(150)
) [42101-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DEVELOPER" not found; SQL statement:
ALTER TABLE developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42102-210]
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "COMPANY_ID" not found; SQL statement:
ALTER TABLE projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.table.Table.getColumn(Table.java:754)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:214)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 11:42:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY_CUSTOMER" already exists; SQL statement:
CREATE TABLE company_customer (
    customer_id BIGINT NOT NULL,
    company_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, company_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (company_id) REFERENCES companies(id)
) [42101-210]
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "SKILLS" already exists; SQL statement:
CREATE TABLE skills (
    id IDENTITY PRIMARY KEY,
    programming_language VARCHAR(50) NOT NULL,
    skill_level VARCHAR(50) NOT NULL
) [42101-210]
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "PROJECTS" already exists; SQL statement:
--перевіряємо значеня поля "sex" щоб воно було в одному з трьох ппараметрів "'male', 'female', 'unknown'"

CREATE TABLE projects (
    id IDENTITY PRIMA [42101-210]
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMERS" already exists; SQL statement:
CREATE TABLE customers (
    id IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    Country VARCHAR(50)
) [42101-210]
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "CUSTOMERS_PROJECTS" already exists; SQL statement:
CREATE TABLE customers_projects (
    customer_id BIGINT NOT NULL,
    projects_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, projects_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (projects_id) REFERENCES projects(id)
) [42101-210]
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANIES" already exists; SQL statement:
CREATE TABLE companies (
    id IDENTITY PRIMARY KEY,
    company_name VARCHAR(100) NOT NULL,
    specialization VARCHAR(150)
) [42101-210]
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "COMPANY_ID" not found; SQL statement:
ALTER TABLE projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.table.Table.getColumn(Table.java:754)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:214)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 12:05:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY_CUSTOMER" already exists; SQL statement:
CREATE TABLE company_customer (
    customer_id BIGINT NOT NULL,
    company_id BIGINT NOT NULL,
    PRIMARY KEY (customer_id, company_id),
    FOREIGN KEY (customer_id) REFERENCES customers(id),
    FOREIGN KEY (company_id) REFERENCES companies(id)
) [42101-210]
2022-05-30 12:06:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS developer --фіксим таблицю ""developer""\000d\000aADD CONSTRAINT sex_enum_values --додаємо обмеження з ""sex_enum_values"" іменем\000d\000aCHECK (sex IN ('male', 'female', 'unknown'))"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS developer --фіксим таблицю "developer"
ADD CONSTRAINT sex_enum_values --додаємо обмеження з "sex_enum_values" іменем
CHECK (sex IN ('male', 'female', 'unknown')) [42001-210]
2022-05-30 12:06:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS developer\000d\000aADD CONSTRAINT developer_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:06:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS projects\000d\000aADD CONSTRAINT projects_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:07:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Constraint "SEX_ENUM_VALUES" already exists; SQL statement:
ALTER TABLE developer --фіксим таблицю "developer"
ADD CONSTRAINT sex_enum_values --додаємо обмеження з "sex_enum_values" іменем
CHECK (sex IN ('male', 'female', 'unknown')) [90045-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:109)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 12:07:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS developer\000d\000aADD CONSTRAINT developer_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:07:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS projects\000d\000aADD CONSTRAINT projects_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:07:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS developer\000d\000aADD CONSTRAINT developer_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:07:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS projects\000d\000aADD CONSTRAINT projects_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:08:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Constraint "DEVELOPER_COMPANIES_ID_FK" already exists; SQL statement:
ALTER TABLE developer
ADD CONSTRAINT developer_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [90045-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:109)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 12:08:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS projects\000d\000aADD CONSTRAINT projects_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:08:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "ALTER TABLE IF [*]NOT EXISTS projects\000d\000aADD CONSTRAINT projects_companies_id_fk\000d\000aFOREIGN KEY (company_id) REFERENCES companies(id)"; expected "EXISTS"; SQL statement:
ALTER TABLE IF NOT EXISTS projects
ADD CONSTRAINT projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42001-210]
2022-05-30 12:08:54 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "COMPANY_ID" not found; SQL statement:
ALTER TABLE projects
ADD CONSTRAINT  IF NOT EXISTS projects_companies_id_fk
FOREIGN KEY (company_id) REFERENCES companies(id) [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.table.Table.getColumn(Table.java:754)
	at org.h2.table.IndexColumn.mapColumns(IndexColumn.java:184)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:214)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.ddl.AlterTable.update(AlterTable.java:46)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 12:36:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "select * from DEVELOPER \000d\000a[*]select * from SKILLS"; SQL statement:
select * from DEVELOPER 
select * from SKILLS [42000-210]
2022-05-30 13:16:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Method is not allowed for a query. Use execute or executeQuery instead of executeUpdate; SQL statement:
SELECT  * FROM developer [90001-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.Prepared.update(Prepared.java:223)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.goit.javacore5dev.feature.storage.Storage.executeUpdate(Storage.java:29)
	at AppTest.main(AppTest.java:13)
2022-05-30 13:37:20 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: Method is not allowed for a query. Use execute or executeQuery instead of executeUpdate; SQL statement:
SELECT * FROM developer [90001-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.message.DbException.get(DbException.java:188)
	at org.h2.command.Prepared.update(Prepared.java:223)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:190)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:143)
	at com.goit.javacore5dev.feature.storage.Storage.executeUpdate(Storage.java:29)
	at AppTest.main(AppTest.java:12)
2022-05-30 13:45:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "id" not found [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:301)
	at com.goit.javacore5dev.feature.homeWorkSelect.HomeWork.printAll(Test.java:20)
	at AppTest.main(AppTest.java:12)
2022-05-30 13:55:07 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "id name" not found [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:301)
	at com.goit.javacore5dev.feature.homeWorkSelect.HomeWork.printAll(HomeWork.java:20)
	at AppTest.main(AppTest.java:11)
2022-05-30 13:55:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "idname" not found [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3492)
	at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:301)
	at com.goit.javacore5dev.feature.homeWorkSelect.HomeWork.printAll(HomeWork.java:20)
	at AppTest.main(AppTest.java:11)
2022-05-30 14:06:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "PROJECTS.ID" not found; SQL statement:
SELECT PROJECTS.ID, SUM(developer.salary) AS javaSalary
FROM DEVELOPER_PROJECT 
INNER JOIN developer ON DEVELOPER_PROJECT.developer_id = developer.id
INNER JOIN skills ON DEVELOPER_PROJECT.PROJECT_ID  = PROJECTS.id
WHERE PROJECTS_NAME = 'Green Tatooine' [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:248)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:230)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:557)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:615)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:553)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 14:17:35 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:124)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3349)
	at org.h2.mvstore.MVStore.panic(MVStore.java:590)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:466)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4118)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:253)
	at com.goit.javacore5dev.feature.storage.Storage.<init>(Storage.java:17)
	at com.goit.javacore5dev.feature.storage.Storage.<clinit>(Storage.java:11)
	at AppTest.main(AppTest.java:6)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 20 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:449)
	... 14 more
2022-05-30 14:37:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "Total salary" not found [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.jdbc.JdbcResultSet.getColumnIndex(JdbcResultSet.java:3518)
	at org.h2.jdbc.JdbcResultSet.getString(JdbcResultSet.java:301)
	at com.goit.javacore5dev.feature.homeWorkSelect.HomeWork.printAll(HomeWork.java:25)
	at AppTest.main(AppTest.java:11)
2022-05-30 14:52:59 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:124)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3349)
	at org.h2.mvstore.MVStore.panic(MVStore.java:590)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:466)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4118)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:253)
	at com.goit.javacore5dev.feature.storage.Storage.<init>(Storage.java:17)
	at com.goit.javacore5dev.feature.storage.Storage.<clinit>(Storage.java:11)
	at AppTest.main(AppTest.java:6)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 20 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:449)
	... 14 more
2022-05-30 14:54:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 14:54:02 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 14:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 14:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 14:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 14:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 14:54:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-212]
2022-05-30 15:00:34 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:124)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3349)
	at org.h2.mvstore.MVStore.panic(MVStore.java:590)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:466)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4118)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:253)
	at com.goit.javacore5dev.feature.storage.Storage.<init>(Storage.java:17)
	at com.goit.javacore5dev.feature.storage.Storage.<clinit>(Storage.java:11)
	at AppTest.main(AppTest.java:6)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 20 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:449)
	... 14 more
2022-05-30 15:28:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT projects.projects_name, [*]ALL(developer.name) AS developers_names\000d\000aFROM developer_project\000d\000aINNER JOIN developer ON developer_project.developer_id = developer.id\000d\000aINNER JOIN projects ON developer_project.project_id  = projects.id\000d\000aWHERE projects_name = 'Green Tatooine'"; expected "*, INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
SELECT projects.projects_name, ALL(developer.name) AS developers_names
FROM developer_project
INNER JOIN developer ON developer_project.developer_id = developer.id
INNER JOIN projects ON developer_project.project_id  = projects.id
WHERE projects_name = 'Green Tatooine' [42001-210]
2022-05-30 16:00:02 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:124)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3349)
	at org.h2.mvstore.MVStore.panic(MVStore.java:590)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:466)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4118)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:253)
	at com.goit.javacore5dev.feature.storage.Storage.<init>(Storage.java:17)
	at com.goit.javacore5dev.feature.storage.Storage.<clinit>(Storage.java:11)
	at AppTest.main(AppTest.java:6)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 20 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:449)
	... 14 more
2022-05-30 16:19:03 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SUM or AVG on wrong data type for "SUM(DEVELOPER.NAME)"; SQL statement:
SELECT projects.projects_name, SUM(developer.name) AS total_developer
FROM developer_project
INNER JOIN developer ON developer_project.developer_id = developer.id
INNER JOIN projects ON developer_project.project_id  = projects.id
WHERE projects_name = 'Green Tatooine' [90015-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.expression.aggregate.Aggregate.optimize(Aggregate.java:979)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:557)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:615)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:553)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 16:19:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "DEVELOPER" not found; SQL statement:
SELECT projects.projects_name, SUM(developer) AS total_developer
FROM developer_project
INNER JOIN developer ON developer_project.developer_id = developer.id
INNER JOIN projects ON developer_project.project_id  = projects.id
WHERE projects_name = 'Green Tatooine' [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:248)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:230)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.expression.aggregate.AbstractAggregate.optimize(AbstractAggregate.java:92)
	at org.h2.expression.aggregate.Aggregate.optimize(Aggregate.java:918)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:557)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:615)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:553)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 16:19:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: SUM or AVG on wrong data type for "SUM(DEVELOPER.NAME)"; SQL statement:
SELECT projects.projects_name, SUM(developer.name) AS total_developer
FROM developer_project
INNER JOIN developer ON developer_project.developer_id = developer.id
INNER JOIN projects ON developer_project.project_id  = projects.id
WHERE projects_name = 'Green Tatooine' [90015-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:651)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.expression.aggregate.Aggregate.optimize(Aggregate.java:979)
	at org.h2.expression.Alias.optimize(Alias.java:52)
	at org.h2.command.query.Select.prepare(Select.java:1177)
	at org.h2.command.Parser.prepareCommand(Parser.java:557)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:615)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:553)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-30 16:32:13 database: flush
org.h2.message.DbException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.get(DbException.java:212)
	at org.h2.message.DbException.convert(DbException.java:395)
	at org.h2.mvstore.db.Store.lambda$new$0(Store.java:124)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:3349)
	at org.h2.mvstore.MVStore.panic(MVStore.java:590)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:466)
	at org.h2.mvstore.MVStore$Builder.open(MVStore.java:4118)
	at org.h2.mvstore.db.Store.<init>(Store.java:133)
	at org.h2.engine.Database.<init>(Database.java:324)
	at org.h2.engine.Engine.openSession(Engine.java:92)
	at org.h2.engine.Engine.openSession(Engine.java:222)
	at org.h2.engine.Engine.createSession(Engine.java:201)
	at org.h2.engine.SessionRemote.connectEmbeddedOrServer(SessionRemote.java:338)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.Driver.connect(Driver.java:59)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:683)
	at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:253)
	at com.goit.javacore5dev.feature.storage.Storage.<init>(Storage.java:17)
	at com.goit.javacore5dev.feature.storage.Storage.<clinit>(Storage.java:11)
	at AppTest.main(AppTest.java:6)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]" [50000-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:554)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	... 20 more
Caused by: org.h2.mvstore.MVStoreException: The file is locked: C:/Users/bohda/OneDrive/JavaApp/java5Dev/ProjectManagementSystem/testdb.mv.db [2.1.212/7]
	at org.h2.mvstore.DataUtils.newMVStoreException(DataUtils.java:1004)
	at org.h2.mvstore.FileStore.open(FileStore.java:163)
	at org.h2.mvstore.MVStore.<init>(MVStore.java:449)
	... 14 more
2022-05-31 11:02:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "REATION_DATE" not found; SQL statement:
UPDATE projects
SET reation_Date = 2022-05-16
WHERE id = 1 [42122-210]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:521)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:496)
	at org.h2.message.DbException.get(DbException.java:227)
	at org.h2.message.DbException.get(DbException.java:203)
	at org.h2.table.Table.getColumn(Table.java:754)
	at org.h2.command.Parser.readTableColumn(Parser.java:1075)
	at org.h2.command.Parser.readUpdateSetClause(Parser.java:1142)
	at org.h2.command.Parser.parseUpdate(Parser.java:1111)
	at org.h2.command.Parser.parsePrepared(Parser.java:841)
	at org.h2.command.Parser.parse(Parser.java:674)
	at org.h2.command.Parser.parse(Parser.java:644)
	at org.h2.command.Parser.prepareCommand(Parser.java:551)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:615)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:553)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1103)
	at org.h2.server.web.WebApp$1.next(WebApp.java:1090)
	at org.h2.server.web.WebThread.process(WebThread.java:189)
	at org.h2.server.web.WebThread.run(WebThread.java:102)
	at java.lang.Thread.run(Unknown Source)
2022-05-31 11:03:12 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "2001 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 2022-05-16
WHERE id = 1 [22018-210]
2022-05-31 11:03:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "2001 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 2022-05-16
WHERE id = 1 [22018-210]
2022-05-31 11:07:10 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "2001 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 2022-05-16
WHERE id = 1 [22018-210]
2022-05-31 11:08:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "2012 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 2022-05-05
WHERE id = 1 [22018-210]
2022-05-31 11:08:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "2010 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 2020-05-05
WHERE id = 1 [22018-210]
2022-05-31 11:10:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "-2020 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 05-03-2022
WHERE id = 1 [22018-210]
2022-05-31 11:13:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "UPDATE projects\000d\000aSET creation_Date = 2013-09-25 [*]13:46:54.372\000d\000aWHERE id = 1"; SQL statement:
UPDATE projects
SET creation_Date = 2013-09-25 13:46:54.372
WHERE id = 1 [42000-210]
2022-05-31 11:13:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "1979 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 2013-09-25
WHERE id = 1 [22018-210]
2022-05-31 11:14:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "0 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 15/3/2016
WHERE id = 1 [22018-210]
2022-05-31 11:14:45 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "-2004 (PROJECTS: ""CREATION_DATE"" DATE)"; SQL statement:
UPDATE projects
SET creation_Date = 17-09-2012
WHERE id = 1 [22018-210]
2022-05-31 11:28:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "CHARACTER VARYING to BOOLEAN"; SQL statement:
SELECT projects.creation_Date, projects.projects_name, developer.name
FROM developer_project
INNER JOIN developer ON developer_project.developer_id = developer.id
INNER JOIN projects ON developer_project.project_id  = projects.id
WHERE projects_name [22018-210]
2022-05-31 11:28:48 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT projects.creation_Date, projects.projects_name, developer.name\000d\000aFROM developer_project\000d\000aINNER JOIN developer ON developer_project.developer_id = developer.id\000d\000aINNER JOIN projects ON developer_project.project_id  = projects.id\000d\000aWHERE [*]* projects_name"; expected "INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
SELECT projects.creation_Date, projects.projects_name, developer.name
FROM developer_project
INNER JOIN developer ON developer_project.developer_id = developer.id
INNER JOIN projects ON developer_project.project_id  = projects.id
WHERE * projects_name [42001-210]
